{"version":3,"names":[],"sources":["mapTypes.tsx"],"sourcesContent":["import { StyleProp, ViewStyle } from \"react-native\";\n\ntype MapTypes =\n  | \"standard\"\n  | \"satellite\"\n  | \"hybrid\"\n  | \"terrain\"\n  | \"none\"\n  | \"mutedStandard\";\n\nexport interface MapMarkerProps {\n  latitude: number;\n  longitude: number;\n  title?: string;\n  description?: string;\n  pinColor?: string;\n  flat?: boolean;\n  style?: StyleProp<ViewStyle>;\n}\n\nexport interface MapViewProps<TMarkerData> {\n  apiKey: string;\n  provider?: \"google\" | null;\n  latitudeDelta?: number;\n  longitudeDelta?: number;\n  zoom?: number;\n  latitude?: number;\n  longitude?: number;\n  mapType?: MapTypes;\n  zoomEnabled?: boolean;\n  showsCompass?: boolean;\n  rotateEnabled?: boolean;\n  scrollEnabled?: boolean;\n  loadingEnabled?: boolean;\n  loadingBackgroundColor?: string;\n  loadingIndicatorColor?: string;\n  showsUserLocation?: boolean;\n  followsUserLocation?: boolean;\n  showsPointsOfInterest?: boolean;\n  style?: StyleProp<ViewStyle>;\n  markersData?: Array<TMarkerData>;\n  keyExtractor: (item: TMarkerData, index: number) => string;\n  renderItem?: ({\n    item,\n    index,\n  }: {\n    item: TMarkerData;\n    index: number;\n  }) => JSX.Element;\n}\n\nexport interface MapCalloutProps {\n  title?: string;\n  description?: string;\n  anchor: any;\n  onPress?: (event: any) => void;\n  showTooltip?: boolean;\n}\n"],"mappings":""}