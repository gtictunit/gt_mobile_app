function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from "react";
import { StyleSheet, View } from "react-native";
import { withTheme } from "../theming";

const Divider = _ref => {
  let {
    style,
    color,
    theme: {
      colors
    },
    ...rest
  } = _ref;
  return /*#__PURE__*/React.createElement(View, _extends({
    style: [{
      backgroundColor: color || colors.divider,
      height: StyleSheet.hairlineWidth
    }, style]
  }, rest));
};

export default withTheme(Divider);
//# sourceMappingURL=Divider.js.map