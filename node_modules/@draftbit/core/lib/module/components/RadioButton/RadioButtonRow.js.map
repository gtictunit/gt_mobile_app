{"version":3,"names":["React","StyleSheet","View","Platform","RadioButton","Text","useRadioButtonGroupContext","Direction","GroupDirection","Touchable","extractStyles","getValueForRadioButton","getRadioButtonAlignment","parentDirection","direction","Horizontal","Row","RowReverse","renderLabel","value","labelStyle","textStyle","RadioButtonRow","Icon","label","color","unselectedColor","onPress","labelContainerStyle","radioButtonStyle","selected","disabled","style","rest","contextValue","onValueChange","realValue","realContextValue","isSelected","handlePress","textStyles","viewStyles","styles","mainParent","flexDirection","alignItems","flex","create","justifyContent","paddingStart","minHeight","paddingEnd","display","select","web","cursor","userSelect"],"sources":["RadioButtonRow.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  StyleProp,\n  ViewStyle,\n  StyleSheet,\n  TextStyle,\n  View,\n  Platform,\n} from \"react-native\";\nimport RadioButton, { RadioButtonProps } from \"./RadioButton\";\nimport Text from \"../Text\";\nimport { useRadioButtonGroupContext } from \"./context\";\nimport type { IconSlot } from \"../../interfaces/Icon\";\nimport { Direction as GroupDirection } from \"./context\";\nimport Touchable from \"../Touchable\";\nimport { extractStyles, getValueForRadioButton } from \"../../utilities\";\n\nexport enum Direction {\n  Row = \"row\",\n  RowReverse = \"row-reverse\",\n}\n\nexport interface RadioButtonRowProps extends Omit<RadioButtonProps, \"onPress\"> {\n  label: string | React.ReactNode;\n  value: string | number; // A string (or number that will be parsed String(number)) that this radio button row represents when selected\n  color?: string;\n  unselectedColor?: string;\n  labelContainerStyle: StyleProp<ViewStyle>;\n  radioButtonStyle?: StyleProp<ViewStyle>;\n  labelStyle?: StyleProp<TextStyle>;\n  onPress?: (value: string) => void;\n  direction?: Direction;\n}\n\nconst getRadioButtonAlignment = (\n  parentDirection: GroupDirection | undefined,\n  direction: Direction\n) => {\n  if (parentDirection === GroupDirection.Horizontal) {\n    return direction === Direction.Row ? \"flex-start\" : \"flex-end\";\n  } else if (direction === Direction.RowReverse) {\n    return \"flex-start\";\n  } else {\n    return \"flex-end\";\n  }\n};\n\nconst renderLabel = (\n  value: string | React.ReactNode,\n  labelStyle: StyleProp<TextStyle>,\n  textStyle: StyleProp<TextStyle>\n) => {\n  if (typeof value === \"string\") {\n    return <Text style={[labelStyle, textStyle]}>{value}</Text>;\n  } else {\n    return <>{value}</>;\n  }\n};\n\nconst RadioButtonRow: React.FC<RadioButtonRowProps & IconSlot> = ({\n  Icon,\n  label,\n  value = \"\",\n  color,\n  unselectedColor,\n  onPress,\n  labelContainerStyle,\n  labelStyle,\n  radioButtonStyle,\n  direction = Direction.Row,\n  selected,\n  disabled,\n  style,\n  ...rest\n}) => {\n  const {\n    value: contextValue,\n    onValueChange,\n    direction: parentDirection,\n  } = useRadioButtonGroupContext();\n\n  const realValue = getValueForRadioButton(value);\n  const realContextValue = getValueForRadioButton(contextValue);\n  const isSelected = selected ?? realContextValue === realValue;\n\n  const handlePress = () => {\n    onPress?.(realValue);\n    onValueChange?.(realValue);\n  };\n\n  const { textStyles, viewStyles } = extractStyles(style);\n\n  return (\n    <Touchable\n      onPress={handlePress}\n      style={[styles.mainParent, { flexDirection: direction }, viewStyles]}\n      disabled={disabled}\n      {...rest}\n    >\n      <View\n        style={[\n          styles.label,\n          {\n            alignItems: direction === Direction.Row ? \"flex-start\" : \"flex-end\",\n          },\n          labelContainerStyle,\n        ]}\n      >\n        {renderLabel(label, labelStyle, textStyles)}\n      </View>\n      <View\n        style={{\n          flex: 1,\n          alignItems: getRadioButtonAlignment(parentDirection, direction),\n        }}\n      >\n        <RadioButton\n          Icon={Icon}\n          selected={isSelected}\n          value={realValue}\n          color={color}\n          unselectedColor={unselectedColor}\n          style={radioButtonStyle}\n        />\n      </View>\n    </Touchable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  mainParent: {\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    paddingStart: 20,\n    minHeight: 50,\n    paddingEnd: 20,\n    display: \"flex\",\n    ...Platform.select({\n      web: {\n        cursor: \"pointer\",\n        userSelect: \"none\",\n      },\n    }),\n  },\n  label: {\n    flex: 3,\n  },\n});\n\nexport default RadioButtonRow;\n"],"mappings":"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"}