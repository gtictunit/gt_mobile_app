{"version":3,"names":["React","useEffect","useState","TextInput","isString","isNumber","isNaN","NumberInput","onChangeText","value","defaultValue","props","currentStringNumberValue","setCurrentStringNumberValue","formatValueToStringNumber","valueToFormat","test","slice","toString","defaultStringNumberValue","handleChangeText","newValue","newStringNumberValue","number","parseFloat","nextStringNumberValue"],"sources":["NumberInput.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\nimport { TextInput } from \"react-native\";\nimport { isString, isNumber, isNaN } from \"lodash\";\n\ninterface Props {\n  value?: number | string;\n  defaultValue?: number | string;\n  onChangeText?: (value?: number) => void;\n}\n\nconst NumberInput: FC<Props> = ({\n  onChangeText,\n  value,\n  defaultValue,\n  ...props\n}) => {\n  const [currentStringNumberValue, setCurrentStringNumberValue] = useState(\"0\");\n\n  const formatValueToStringNumber = (valueToFormat?: number | string) => {\n    if (valueToFormat != null) {\n      if (isString(valueToFormat) && valueToFormat !== \"\") {\n        if (/^0[1-9]$/.test(valueToFormat)) {\n          return valueToFormat.slice(1);\n        } else if (/^[+-]?([0-9]+\\.?[0-9]*|\\.[0-9]+)$/.test(valueToFormat)) {\n          return valueToFormat;\n        } else {\n          return currentStringNumberValue;\n        }\n      } else if (isNumber(valueToFormat) && !isNaN(valueToFormat)) {\n        return valueToFormat.toString();\n      }\n    }\n\n    return \"0\";\n  };\n\n  // set currentStringNumberValue as defaultValue prop if there is a differnce on first render only\n  useEffect(() => {\n    const defaultStringNumberValue = formatValueToStringNumber(defaultValue);\n\n    if (currentStringNumberValue !== defaultStringNumberValue) {\n      setCurrentStringNumberValue(defaultStringNumberValue);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleChangeText = (newValue: string) => {\n    const newStringNumberValue = formatValueToStringNumber(newValue);\n    const number = parseFloat(newStringNumberValue);\n\n    setCurrentStringNumberValue(newStringNumberValue);\n    onChangeText?.(number);\n  };\n\n  // run handleChangeText with value prop only when value prop changes (and first render to reset currentStringNumberValue)\n  useEffect(() => {\n    const nextStringNumberValue = formatValueToStringNumber(value);\n\n    if (currentStringNumberValue !== nextStringNumberValue) {\n      handleChangeText(nextStringNumberValue);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  return (\n    <TextInput\n      keyboardType=\"numeric\"\n      value={currentStringNumberValue}\n      onChangeText={handleChangeText}\n      {...props}\n    />\n  );\n};\n\nexport default NumberInput;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,KAA7B,QAA0C,QAA1C;;AAQA,MAAMC,WAAsB,GAAG,QAKzB;EAAA,IAL0B;IAC9BC,YAD8B;IAE9BC,KAF8B;IAG9BC,YAH8B;IAI9B,GAAGC;EAJ2B,CAK1B;EACJ,MAAM,CAACC,wBAAD,EAA2BC,2BAA3B,IAA0DX,QAAQ,CAAC,GAAD,CAAxE;;EAEA,MAAMY,yBAAyB,GAAIC,aAAD,IAAqC;IACrE,IAAIA,aAAa,IAAI,IAArB,EAA2B;MACzB,IAAIX,QAAQ,CAACW,aAAD,CAAR,IAA2BA,aAAa,KAAK,EAAjD,EAAqD;QACnD,IAAI,WAAWC,IAAX,CAAgBD,aAAhB,CAAJ,EAAoC;UAClC,OAAOA,aAAa,CAACE,KAAd,CAAoB,CAApB,CAAP;QACD,CAFD,MAEO,IAAI,oCAAoCD,IAApC,CAAyCD,aAAzC,CAAJ,EAA6D;UAClE,OAAOA,aAAP;QACD,CAFM,MAEA;UACL,OAAOH,wBAAP;QACD;MACF,CARD,MAQO,IAAIP,QAAQ,CAACU,aAAD,CAAR,IAA2B,CAACT,KAAK,CAACS,aAAD,CAArC,EAAsD;QAC3D,OAAOA,aAAa,CAACG,QAAd,EAAP;MACD;IACF;;IAED,OAAO,GAAP;EACD,CAhBD,CAHI,CAqBJ;;;EACAjB,SAAS,CAAC,MAAM;IACd,MAAMkB,wBAAwB,GAAGL,yBAAyB,CAACJ,YAAD,CAA1D;;IAEA,IAAIE,wBAAwB,KAAKO,wBAAjC,EAA2D;MACzDN,2BAA2B,CAACM,wBAAD,CAA3B;IACD,CALa,CAMd;;EACD,CAPQ,EAON,EAPM,CAAT;;EASA,MAAMC,gBAAgB,GAAIC,QAAD,IAAsB;IAC7C,MAAMC,oBAAoB,GAAGR,yBAAyB,CAACO,QAAD,CAAtD;IACA,MAAME,MAAM,GAAGC,UAAU,CAACF,oBAAD,CAAzB;IAEAT,2BAA2B,CAACS,oBAAD,CAA3B;IACAd,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAGe,MAAH,CAAZ;EACD,CAND,CA/BI,CAuCJ;;;EACAtB,SAAS,CAAC,MAAM;IACd,MAAMwB,qBAAqB,GAAGX,yBAAyB,CAACL,KAAD,CAAvD;;IAEA,IAAIG,wBAAwB,KAAKa,qBAAjC,EAAwD;MACtDL,gBAAgB,CAACK,qBAAD,CAAhB;IACD,CALa,CAMd;;EACD,CAPQ,EAON,CAAChB,KAAD,CAPM,CAAT;EASA,oBACE,oBAAC,SAAD;IACE,YAAY,EAAC,SADf;IAEE,KAAK,EAAEG,wBAFT;IAGE,YAAY,EAAEQ;EAHhB,GAIMT,KAJN,EADF;AAQD,CA9DD;;AAgEA,eAAeJ,WAAf"}