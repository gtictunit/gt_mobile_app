{"version":3,"names":["ToggleButton","Icon","icon","toggled","onPress","defaultValue","disabled","color","colorSecondary","borderColor","iconSize","width","height","theme","colors","style","rest","internalValue","setInternalValue","React","useState","useEffect","handlePress","styles","mainContainer","backgroundColor","StyleSheet","create","borderWidth","withTheme"],"sources":["ToggleButton.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { withTheme } from \"../theming\";\nimport { colorTypes } from \"@draftbit/types\";\nimport { StyleProp, StyleSheet, ViewStyle } from \"react-native\";\nimport IconButton from \"./IconButton\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\n\ntype Props = {\n  icon: string;\n  toggled?: boolean;\n  onPress?: (value: boolean) => void;\n  defaultValue?: boolean;\n  disabled?: boolean;\n  color?: colorTypes;\n  colorSecondary?: colorTypes;\n  borderColor?: colorTypes;\n  iconSize?: number;\n  width?: number;\n  height?: number;\n  style?: StyleProp<ViewStyle>;\n  theme: Theme;\n} & IconSlot;\n\nconst ToggleButton: React.FC<React.PropsWithChildren<Props>> = ({\n  Icon,\n  icon,\n  toggled = false,\n  onPress = () => {},\n  defaultValue,\n  disabled = false,\n  color = \"primary\",\n  colorSecondary = \"surface\",\n  borderColor = \"divider\",\n  iconSize = 25,\n  width = 50,\n  height = 50,\n  theme: { colors },\n  style,\n  ...rest\n}) => {\n  const [internalValue, setInternalValue] = React.useState<boolean>(\n    toggled || defaultValue || false\n  );\n\n  React.useEffect(() => {\n    if (toggled != null) {\n      setInternalValue(toggled);\n    }\n  }, [toggled]);\n\n  React.useEffect(() => {\n    if (defaultValue != null) {\n      setInternalValue(defaultValue);\n    }\n  }, [defaultValue]);\n\n  const handlePress = () => {\n    setInternalValue(!internalValue);\n    onPress(!internalValue);\n  };\n\n  return (\n    <IconButton\n      Icon={Icon}\n      icon={icon}\n      size={iconSize}\n      color={internalValue ? colors[color] : colors[colorSecondary]}\n      onPress={handlePress}\n      disabled={disabled}\n      style={[\n        styles.mainContainer,\n        {\n          width,\n          height,\n          backgroundColor: internalValue\n            ? colors[colorSecondary]\n            : colors[color],\n          borderColor: colors[borderColor],\n        },\n        style,\n      ]}\n      {...rest}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    borderWidth: 1,\n  },\n});\n\nexport default withTheme(ToggleButton);\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;;;AAoBA,MAAMA,YAAsD,GAAG,QAgBzD;EAAA,IAhB0D;IAC9DC,IAD8D;IAE9DC,IAF8D;IAG9DC,OAAO,GAAG,KAHoD;IAI9DC,OAAO,GAAG,MAAM,CAAE,CAJ4C;IAK9DC,YAL8D;IAM9DC,QAAQ,GAAG,KANmD;IAO9DC,KAAK,GAAG,SAPsD;IAQ9DC,cAAc,GAAG,SAR6C;IAS9DC,WAAW,GAAG,SATgD;IAU9DC,QAAQ,GAAG,EAVmD;IAW9DC,KAAK,GAAG,EAXsD;IAY9DC,MAAM,GAAG,EAZqD;IAa9DC,KAAK,EAAE;MAAEC;IAAF,CAbuD;IAc9DC,KAd8D;IAe9D,GAAGC;EAf2D,CAgB1D;EACJ,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCC,KAAK,CAACC,QAAN,CACxCjB,OAAO,IAAIE,YAAX,IAA2B,KADa,CAA1C;EAIAc,KAAK,CAACE,SAAN,CAAgB,MAAM;IACpB,IAAIlB,OAAO,IAAI,IAAf,EAAqB;MACnBe,gBAAgB,CAACf,OAAD,CAAhB;IACD;EACF,CAJD,EAIG,CAACA,OAAD,CAJH;EAMAgB,KAAK,CAACE,SAAN,CAAgB,MAAM;IACpB,IAAIhB,YAAY,IAAI,IAApB,EAA0B;MACxBa,gBAAgB,CAACb,YAAD,CAAhB;IACD;EACF,CAJD,EAIG,CAACA,YAAD,CAJH;;EAMA,MAAMiB,WAAW,GAAG,MAAM;IACxBJ,gBAAgB,CAAC,CAACD,aAAF,CAAhB;IACAb,OAAO,CAAC,CAACa,aAAF,CAAP;EACD,CAHD;;EAKA,oBACE,oBAAC,mBAAD;IACE,IAAI,EAAEhB,IADR;IAEE,IAAI,EAAEC,IAFR;IAGE,IAAI,EAAEQ,QAHR;IAIE,KAAK,EAAEO,aAAa,GAAGH,MAAM,CAACP,KAAD,CAAT,GAAmBO,MAAM,CAACN,cAAD,CAJ/C;IAKE,OAAO,EAAEc,WALX;IAME,QAAQ,EAAEhB,QANZ;IAOE,KAAK,EAAE,CACLiB,MAAM,CAACC,aADF,EAEL;MACEb,KADF;MAEEC,MAFF;MAGEa,eAAe,EAAER,aAAa,GAC1BH,MAAM,CAACN,cAAD,CADoB,GAE1BM,MAAM,CAACP,KAAD,CALZ;MAMEE,WAAW,EAAEK,MAAM,CAACL,WAAD;IANrB,CAFK,EAULM,KAVK;EAPT,GAmBMC,IAnBN,EADF;AAuBD,CA7DD;;AA+DA,MAAMO,MAAM,GAAGG,uBAAA,CAAWC,MAAX,CAAkB;EAC/BH,aAAa,EAAE;IACbI,WAAW,EAAE;EADA;AADgB,CAAlB,CAAf;;eAMe,IAAAC,kBAAA,EAAU7B,YAAV,C"}