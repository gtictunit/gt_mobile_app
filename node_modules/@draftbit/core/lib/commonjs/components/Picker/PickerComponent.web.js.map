{"version":3,"names":["Picker","style","options","placeholder","selectedValue","disabled","onValueChange","onValueChangeOverride","props","viewStyles","borderRadius","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderColor","backgroundColor","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","extractStyles","textField","React","useRef","undefined","itemValue","itemIndex","toggleFocus","current","stylesWithoutMargin","omit","StyleSheet","flatten","selectedLabel","find","o","value","label","styles","container","flex","opacity","position","top","left","right","bottom","width","map","create","alignSelf","withTheme"],"sources":["PickerComponent.web.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { Picker as NativePicker } from \"@react-native-picker/picker\";\nimport omit from \"lodash.omit\";\nimport { withTheme } from \"../../theming\";\nimport { extractStyles } from \"../../utilities\";\n\nimport TextField from \"../TextField\";\nimport Touchable from \"../Touchable\";\nimport { PickerComponentProps } from \"./PickerTypes\";\n\nconst Picker: React.FC<PickerComponentProps> = ({\n  style,\n  options,\n  placeholder,\n  selectedValue,\n  disabled = false,\n  onValueChange: onValueChangeOverride = () => {},\n  ...props\n}) => {\n  const {\n    viewStyles: {\n      borderRadius, // eslint-disable-line @typescript-eslint/no-unused-vars\n      borderWidth, // eslint-disable-line @typescript-eslint/no-unused-vars\n      borderTopWidth, // eslint-disable-line @typescript-eslint/no-unused-vars\n      borderRightWidth, // eslint-disable-line @typescript-eslint/no-unused-vars\n      borderBottomWidth, // eslint-disable-line @typescript-eslint/no-unused-vars\n      borderLeftWidth, // eslint-disable-line @typescript-eslint/no-unused-vars\n      borderColor, // eslint-disable-line @typescript-eslint/no-unused-vars\n      backgroundColor, // eslint-disable-line @typescript-eslint/no-unused-vars\n      padding, // eslint-disable-line @typescript-eslint/no-unused-vars\n      paddingTop, // eslint-disable-line @typescript-eslint/no-unused-vars\n      paddingRight, // eslint-disable-line @typescript-eslint/no-unused-vars\n      paddingBottom, // eslint-disable-line @typescript-eslint/no-unused-vars\n      paddingLeft, // eslint-disable-line @typescript-eslint/no-unused-vars\n      ...viewStyles\n    },\n  } = extractStyles(style);\n\n  const textField = React.useRef<typeof TextField | undefined>(undefined);\n\n  const onValueChange = (itemValue: string, itemIndex: number) => {\n    toggleFocus();\n    onValueChangeOverride(itemValue, itemIndex);\n  };\n\n  const toggleFocus = () => {\n    if (!disabled) {\n      // @ts-ignore\n      textField.current.toggleFocus(); // cannot determine if method exists due to component being wrapped in a withTheme()\n    }\n  };\n\n  const stylesWithoutMargin =\n    style &&\n    omit(StyleSheet.flatten(style), [\n      \"margin\",\n      \"marginTop\",\n      \"marginRight\",\n      \"marginBottom\",\n      \"marginLeft\",\n    ]);\n\n  const selectedLabel =\n    selectedValue &&\n    (options.find((o) => o.value === selectedValue)?.label ?? selectedValue);\n\n  return (\n    <Touchable\n      disabled={disabled}\n      onPress={toggleFocus}\n      style={[styles.container, viewStyles]}\n    >\n      <View>\n        <NativePicker\n          enabled={!disabled}\n          selectedValue={selectedValue}\n          onValueChange={onValueChange}\n          style={{\n            flex: 1,\n            opacity: 0,\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            width: \"100%\",\n          }}\n        >\n          {options.map((o) => (\n            <NativePicker.Item label={o.label} value={o.value} key={o.value} />\n          ))}\n        </NativePicker>\n        <View pointerEvents=\"none\">\n          <TextField\n            {...props}\n            value={selectedLabel}\n            placeholder={placeholder}\n            // @ts-ignore\n            ref={textField} // cannot determine if ref is of correct type due to component being wrapped in a withTheme()\n            disabled={disabled}\n            // @ts-expect-error\n            style={stylesWithoutMargin}\n          />\n        </View>\n      </View>\n    </Touchable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: \"stretch\",\n  },\n});\n\nexport default withTheme(Picker);\n"],"mappings":"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"}