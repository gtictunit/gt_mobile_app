{"version":3,"names":["Picker","Icon","style","options","placeholder","selectedValue","disabled","onValueChange","theme","colors","props","viewStyles","borderRadius","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderColor","backgroundColor","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","extractStyles","textField","React","useRef","undefined","pickerVisible","setIsPickerVisible","useState","toggleVisibility","current","toggleFocus","stylesWithoutMargin","omit","StyleSheet","flatten","selectedLabel","find","o","value","label","styles","container","String","picker","divider","pickerContainer","closeButton","map","create","alignSelf","position","bottom","left","right","flexDirection","justifyContent","width","withTheme"],"sources":["PickerComponent.ios.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport omit from \"lodash.omit\";\n\nimport { Picker as NativePicker } from \"@react-native-picker/picker\";\n\nimport { withTheme } from \"../../theming\";\n\nimport Portal from \"../Portal/Portal\";\nimport Button from \"../DeprecatedButton\";\nimport TextField from \"../TextField\";\nimport Touchable from \"../Touchable\";\nimport { PickerComponentProps } from \"./PickerTypes\";\nimport { extractStyles } from \"../../utilities\";\nimport type { IconSlot } from \"../../interfaces/Icon\";\n\nconst Picker: React.FC<PickerComponentProps & IconSlot> = ({\n  Icon,\n  style,\n  options,\n  placeholder,\n  selectedValue,\n  disabled = false,\n  onValueChange = () => {},\n  theme: { colors },\n  ...props\n}) => {\n  const {\n    viewStyles: {\n      borderRadius, // eslint-disable-line @typescript-eslint/no-unused-vars\n      borderWidth, // eslint-disable-line @typescript-eslint/no-unused-vars\n      borderTopWidth, // eslint-disable-line @typescript-eslint/no-unused-vars\n      borderRightWidth, // eslint-disable-line @typescript-eslint/no-unused-vars\n      borderBottomWidth, // eslint-disable-line @typescript-eslint/no-unused-vars\n      borderLeftWidth, // eslint-disable-line @typescript-eslint/no-unused-vars\n      borderColor, // eslint-disable-line @typescript-eslint/no-unused-vars\n      backgroundColor, // eslint-disable-line @typescript-eslint/no-unused-vars\n      padding, // eslint-disable-line @typescript-eslint/no-unused-vars\n      paddingTop, // eslint-disable-line @typescript-eslint/no-unused-vars\n      paddingRight, // eslint-disable-line @typescript-eslint/no-unused-vars\n      paddingBottom, // eslint-disable-line @typescript-eslint/no-unused-vars\n      paddingLeft, // eslint-disable-line @typescript-eslint/no-unused-vars\n      ...viewStyles\n    },\n  } = extractStyles(style);\n\n  const textField = React.useRef<typeof TextField | undefined>(undefined);\n  const [pickerVisible, setIsPickerVisible] = React.useState(false);\n\n  const toggleVisibility = () => {\n    setIsPickerVisible(!pickerVisible);\n    // @ts-ignore\n    textField.current.toggleFocus(); // cannot determine if method exists due to component being wrapped in a withTheme()\n  };\n\n  const stylesWithoutMargin =\n    style &&\n    omit(StyleSheet.flatten(style), [\n      \"margin\",\n      \"marginTop\",\n      \"marginRight\",\n      \"marginBottom\",\n      \"marginLeft\",\n    ]);\n\n  const selectedLabel =\n    selectedValue &&\n    (options.find((o) => o.value === selectedValue)?.label ?? selectedValue);\n\n  return (\n    <View style={[styles.container, viewStyles]}>\n      <Touchable disabled={disabled} onPress={toggleVisibility}>\n        <TextField\n          {...props}\n          value={String(selectedLabel)}\n          placeholder={placeholder}\n          // @ts-ignore\n          ref={textField} // cannot determine if ref is of correct type due to component being wrapped in a withTheme()\n          disabled={disabled}\n          pointerEvents=\"none\"\n          // @ts-expect-error\n          style={stylesWithoutMargin}\n          Icon={Icon}\n        />\n      </Touchable>\n      {pickerVisible && (\n        <Portal>\n          <View style={[styles.picker, { backgroundColor: colors.divider }]}>\n            <SafeAreaView style={styles.pickerContainer}>\n              <Button\n                Icon={Icon}\n                type=\"text\"\n                onPress={toggleVisibility}\n                style={styles.closeButton}\n              >\n                Close\n              </Button>\n              <NativePicker\n                style={{ backgroundColor: \"white\" }}\n                selectedValue={selectedValue}\n                onValueChange={onValueChange}\n              >\n                {options.map((o: any) => (\n                  <NativePicker.Item\n                    label={o.label}\n                    value={o.value}\n                    key={o.value}\n                  />\n                ))}\n              </NativePicker>\n            </SafeAreaView>\n          </View>\n        </Portal>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: \"stretch\",\n  },\n  picker: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  pickerContainer: {\n    backgroundColor: \"white\",\n    flexDirection: \"column\",\n    width: \"100%\",\n  },\n  closeButton: {\n    alignSelf: \"flex-end\",\n  },\n});\n\nexport default withTheme(Picker);\n"],"mappings":"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"}