{"version":3,"names":["Checkbox","Icon","status","disabled","onPress","onCheck","onUncheck","color","uncheckedColor","defaultValue","checkedIcon","uncheckedIcon","size","style","rest","internalValue","setInternalValue","React","useState","useEffect","previousDefaultValue","usePrevious","Boolean","colors","useTheme","checkboxColor","primary","handlePress","newValue","styles","container","width","height","icon","StyleSheet","absoluteFill","fillContainer","fill","opacity","borderColor","create","borderRadius","alignItems","justifyContent","alignSelf"],"sources":["Checkbox.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  StyleSheet,\n  TouchableHighlightProps,\n  StyleProp,\n  ViewStyle,\n} from \"react-native\";\nimport { useTheme } from \"../../theming\";\nimport type { IconSlot } from \"../../interfaces/Icon\";\n\nimport Touchable from \"../Touchable\";\nimport { usePrevious } from \"../../hooks\";\n\nexport interface CheckboxProps {\n  status?: boolean;\n  disabled?: boolean;\n  onPress?: (checked: boolean) => void;\n  onCheck?: () => void;\n  onUncheck?: () => void;\n  color?: string;\n  uncheckedColor?: string;\n  checkedIcon?: string;\n  uncheckedIcon?: string;\n  defaultValue?: boolean;\n  size?: number;\n  style?: StyleProp<ViewStyle>;\n}\n\nconst Checkbox: React.FC<\n  CheckboxProps & TouchableHighlightProps & IconSlot\n> = ({\n  Icon,\n  status,\n  disabled = false,\n  onPress,\n  onCheck,\n  onUncheck,\n  color,\n  uncheckedColor,\n  defaultValue,\n  checkedIcon = \"MaterialCommunityIcons/checkbox-marked\",\n  uncheckedIcon = \"MaterialCommunityIcons/checkbox-blank-outline\",\n  size = 24,\n  style,\n  ...rest\n}) => {\n  const [internalValue, setInternalValue] = React.useState<boolean>(\n    status || defaultValue || false\n  );\n\n  React.useEffect(() => {\n    if (status != null) {\n      setInternalValue(status);\n    }\n  }, [status]);\n\n  // This special logic is to handle weird APIs like Airtable that return\n  // true or undefined for a boolean\n  const previousDefaultValue = usePrevious(defaultValue) as boolean | undefined;\n\n  React.useEffect(() => {\n    if (defaultValue !== previousDefaultValue) {\n      setInternalValue(Boolean(defaultValue));\n    }\n  }, [defaultValue, previousDefaultValue]);\n\n  const { colors } = useTheme();\n\n  const checkboxColor = internalValue\n    ? color || colors.primary\n    : uncheckedColor || colors.primary;\n\n  const handlePress = () => {\n    const newValue = !internalValue;\n\n    setInternalValue(newValue);\n    onPress?.(newValue);\n\n    if (newValue) {\n      onCheck?.();\n    }\n\n    if (!newValue) {\n      onUncheck?.();\n    }\n  };\n\n  return (\n    <Touchable\n      {...rest}\n      onPress={handlePress}\n      disabled={disabled}\n      accessibilityState={{ disabled }}\n      accessibilityRole=\"button\"\n      accessibilityLiveRegion=\"polite\"\n      style={[styles.container, style, { width: size, height: size }]}\n    >\n      <Icon\n        style={styles.icon}\n        name={internalValue ? checkedIcon : uncheckedIcon}\n        size={size}\n        color={checkboxColor}\n      />\n      <View style={[StyleSheet.absoluteFill, styles.fillContainer]}>\n        <View\n          style={[\n            styles.fill,\n            { opacity: disabled ? 0.5 : 1 },\n            { borderColor: checkboxColor },\n          ]}\n        />\n      </View>\n    </Touchable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n  },\n  fillContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  icon: {\n    alignSelf: \"center\",\n  },\n  fill: {\n    borderRadius: 5,\n    width: 30,\n    height: 30,\n    alignSelf: \"center\",\n  },\n});\n\nexport default Checkbox;\n"],"mappings":"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"}