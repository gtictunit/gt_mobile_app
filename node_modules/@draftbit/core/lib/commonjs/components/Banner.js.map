{"version":3,"names":["ELEVATION","DEFAULT_MAX_WIDTH","Banner","initiallyVisible","dismissable","icon","buttonColor","content","contentStyle","style","theme","Icon","rest","visible","setVisible","React","useState","useEffect","current","position","useRef","Animated","Value","layout","setLayout","height","measured","timing","duration","toValue","useNativeDriver","start","handleLayout","nativeEvent","multiply","translateY","add","styles","container","shadow","wrapper","absolute","transform","opacity","marginBottom","message","color","colors","text","actions","primary","StyleSheet","create","elevation","overflow","alignSelf","width","maxWidth","top","flexDirection","justifyContent","marginHorizontal","marginTop","margin","flex","withTheme"],"sources":["Banner.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Button,\n  Text,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  Animated,\n} from \"react-native\";\nimport Surface from \"./Surface\";\nimport type { IconSlot } from \"../interfaces/Icon\";\nimport shadow from \"../styles/shadow\";\nimport { withTheme } from \"../theming\";\nimport type { Theme } from \"../styles/DefaultTheme\";\n\nconst ELEVATION = 1;\nconst DEFAULT_MAX_WIDTH = 960;\n\ntype Props = {\n  initiallyVisible: boolean;\n  dismissable: boolean;\n  buttonColor?: string;\n  icon?: string;\n  content?: string;\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n} & IconSlot;\n\ntype NativeEvent = {\n  nativeEvent: {\n    layout: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n  };\n};\n\nconst Banner: React.FC<React.PropsWithChildren<Props>> = ({\n  initiallyVisible = true,\n  dismissable = true,\n  icon,\n  buttonColor,\n  content,\n  contentStyle,\n  style,\n  theme,\n  Icon,\n  ...rest\n}) => {\n  const [visible, setVisible] = React.useState(initiallyVisible);\n\n  React.useEffect(() => {\n    if (initiallyVisible) {\n      setVisible(true);\n    }\n  }, [initiallyVisible]);\n\n  const { current: position } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const [layout, setLayout] = React.useState<{\n    height: number;\n    measured: boolean;\n  }>({\n    height: 0,\n    measured: false,\n  });\n\n  React.useEffect(() => {\n    if (visible) {\n      // show\n      Animated.timing(position, {\n        duration: 250,\n        toValue: 1,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      // hide\n      Animated.timing(position, {\n        duration: 200,\n        toValue: 0,\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [visible, position]);\n\n  const handleLayout = ({ nativeEvent }: NativeEvent) => {\n    const { height } = nativeEvent.layout;\n    setLayout({ height, measured: true });\n  };\n\n  // The banner animation has 2 parts:\n  // 1. Blank spacer element which animates its height to move the content\n  // 2. Actual banner which animates its translateY\n  // In initial render, we position everything normally and measure the height of the banner\n  // Once we have the height, we apply the height to the spacer and switch the banner to position: absolute\n  // We need this because we need to move the content below as if banner's height was being animated\n  // However we can't animated banner's height directly as it'll also resize the content inside\n  const height = Animated.multiply(position, layout.height);\n\n  const translateY = Animated.multiply(\n    Animated.add(position, -1),\n    layout.height\n  );\n\n  return (\n    <Surface\n      {...rest}\n      style={[styles.container, shadow(ELEVATION) as ViewStyle, style]}\n    >\n      <View style={[styles.wrapper, contentStyle]}>\n        <Animated.View style={{ height }} />\n        <Animated.View\n          onLayout={handleLayout}\n          style={[\n            layout.measured || !visible\n              ? // If we have measured banner's height or it's invisible,\n                // Position it absolutely, the layout will be taken care of the spacer\n                [styles.absolute, { transform: [{ translateY }] }]\n              : // Otherwise position it normally\n                null,\n            !layout.measured && !visible\n              ? // If we haven't measured banner's height yet and it's invisible,\n                // hide it with opacity: 0 so user doesn't see it\n                { opacity: 0 }\n              : null,\n          ]}\n        >\n          <View\n            style={[styles.content, { marginBottom: dismissable ? 0 : 16 }]}\n          >\n            {icon ? (\n              <View style={styles.icon}>\n                <Icon name={icon} size={40} />\n              </View>\n            ) : null}\n            <Text\n              style={[styles.message, { color: theme.colors.text }]}\n              accessibilityLiveRegion={visible ? \"polite\" : \"none\"}\n              accessibilityRole=\"alert\"\n            >\n              {content}\n            </Text>\n          </View>\n          {dismissable ? (\n            <View style={styles.actions}>\n              <Button\n                color={buttonColor || theme.colors.primary}\n                title=\"Close\"\n                onPress={() => setVisible(false)}\n              />\n            </View>\n          ) : null}\n        </Animated.View>\n      </View>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    elevation: ELEVATION,\n  },\n  wrapper: {\n    overflow: \"hidden\",\n    alignSelf: \"center\",\n    width: \"100%\",\n    maxWidth: DEFAULT_MAX_WIDTH,\n  },\n  absolute: {\n    position: \"absolute\",\n    top: 0,\n    width: \"100%\",\n  },\n  content: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0,\n  },\n  icon: {\n    margin: 8,\n  },\n  message: {\n    flex: 1,\n    margin: 8,\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    margin: 8,\n  },\n});\n\nexport default withTheme(Banner);\n"],"mappings":"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"}