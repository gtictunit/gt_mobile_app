"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _lodash = require("lodash");

var _theming = require("../theming");

var _IconButton = _interopRequireDefault(require("./IconButton"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const Stepper = _ref => {
  let {
    min = -Infinity,
    max = Infinity,
    value: valueProp,
    defaultValue,
    style,
    typeStyle,
    iconSize = 24,
    iconColor,
    onChange,
    theme: {
      colors,
      typography
    },
    Icon
  } = _ref;
  const [value, setValue] = (0, _react.useState)(defaultValue !== null && defaultValue !== void 0 ? defaultValue : 0);

  const isValidValue = valueArg => valueArg >= min && valueArg <= max;

  const handlePlusOrMinus = type => {
    const newValue = type === "plus" ? value + 1 : value - 1;

    if (isValidValue(newValue)) {
      setValue(newValue);
      onChange === null || onChange === void 0 ? void 0 : onChange(newValue);
    }
  };

  (0, _react.useEffect)(() => {
    if (valueProp != null && (0, _lodash.isNumber)(valueProp) && valueProp !== value && isValidValue(valueProp)) {
      setValue(valueProp);
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [valueProp]);
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [{
      flexDirection: "row"
    }, style]
  }, /*#__PURE__*/_react.default.createElement(_IconButton.default, {
    Icon: Icon,
    icon: "MaterialIcons/remove",
    onPress: () => handlePlusOrMinus("minus"),
    size: iconSize,
    color: iconColor,
    disabled: value === min,
    style: {
      opacity: value === min ? 0.5 : 1
    }
  }), /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: [typography.body1, {
      textAlign: "center",
      alignSelf: "center",
      color: colors.medium,
      marginHorizontal: 8
    }, typeStyle]
  }, value), /*#__PURE__*/_react.default.createElement(_IconButton.default, {
    Icon: Icon,
    icon: "MaterialIcons/add",
    onPress: () => handlePlusOrMinus("plus"),
    size: iconSize,
    color: iconColor,
    disabled: value === max,
    style: {
      opacity: value === max ? 0.5 : 1
    }
  }));
};

var _default = (0, _theming.withTheme)(Stepper);

exports.default = _default;
//# sourceMappingURL=Stepper.js.map