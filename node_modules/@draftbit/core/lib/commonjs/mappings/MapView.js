"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SEED_DATA = void 0;

var _types = require("@draftbit/types");

const SEED_DATA = {
  name: "Map View",
  tag: "MapView",
  packageName: "@draftbit/maps",
  description: "A map view",
  category: _types.COMPONENT_TYPES.media,
  layout: {
    flex: 1
  },
  props: {
    provider: {
      formType: _types.FORM_TYPES.flatArray,
      propType: _types.PROP_TYPES.STRING,
      editable: true,
      group: _types.GROUPS.basic,
      label: "Provider",
      description: "The maps provider",
      required: false,
      defaultValue: null,
      options: ["google"]
    },
    latitude: (0, _types.createNumberProp)({
      label: "Initial Latitude",
      description: "The longitude for the map's initial region",
      required: false,
      precision: 6,
      min: -90,
      max: 90,
      defaultValue: 37.40241
    }),
    longitude: (0, _types.createNumberProp)({
      label: "Initial Longitude",
      description: "The longitude for the map's initial region",
      required: false,
      precision: 6,
      min: -180,
      max: 180,
      defaultValue: -122.12125
    }),
    zoom: (0, _types.createNumberProp)({
      label: "Initial Zoom",
      description: "The initial zoom of the map",
      required: true,
      precision: 0,
      step: 1,
      defaultValue: 8,
      min: 0,
      max: 22,
      group: _types.GROUPS.basic
    }),
    mapType: {
      label: "Map Type",
      description: "The type of map to show",
      group: _types.GROUPS.basic,
      formType: _types.FORM_TYPES.flatArray,
      propType: _types.PROP_TYPES.STRING,
      required: false,
      defaultValue: null,
      options: ["standard", "satellite", "hybrid", "terrain", "none", "mutedStandard"]
    },
    zoomEnabled: (0, _types.createBoolProp)({
      label: "Zoom Enabled",
      description: "Whether zooming is enabled (native only)",
      group: _types.GROUPS.basic,
      required: false,
      defaultValue: true
    }),
    showsCompass: (0, _types.createBoolProp)({
      label: "Shows Compass",
      description: "Whether compass is shown",
      group: _types.GROUPS.basic,
      required: false,
      defaultValue: false
    }),
    rotateEnabled: (0, _types.createBoolProp)({
      label: "Rotate Enabled",
      description: "Whether rotating the map is enabled",
      group: _types.GROUPS.basic,
      required: false,
      defaultValue: true
    }),
    scrollEnabled: (0, _types.createBoolProp)({
      label: "Pan Enabled",
      description: "Whether panning the map view is enabled",
      group: _types.GROUPS.basic,
      required: false,
      defaultValue: true
    }),
    loadingEnabled: (0, _types.createBoolProp)({
      label: "Loading Enabled",
      description: "If true a loading indicator will show while the map is loading",
      group: _types.GROUPS.basic,
      required: false,
      defaultValue: true
    }),
    loadingIndicatorColor: (0, _types.createColorProp)({
      label: "Loading Indicator Color",
      description: "Color of the loading indicator"
    }),
    loadingBackgroundColor: (0, _types.createColorProp)({
      label: "Loading BG Color",
      description: "Color of the background to show while the map is loading"
    }),
    showsUserLocation: (0, _types.createBoolProp)({
      label: "Shows User Location",
      description: "Whether to show the user's location on the map",
      required: false,
      defaultValue: null,
      group: _types.GROUPS.basic
    }),
    followsUserLocation: (0, _types.createBoolProp)({
      label: "Follows User Location (iOS only)",
      description: "Whether to set the map region to follow the user's location",
      required: false,
      defaultValue: null,
      group: _types.GROUPS.basic
    }),
    showsPointsOfInterest: (0, _types.createBoolProp)({
      label: "Shows Points of Interest",
      description: "Whether to show points of interest on the map.",
      required: false,
      defaultValue: true,
      group: _types.GROUPS.basic
    }),
    apiKey: (0, _types.createTextProp)({
      defaultValue: process.env.GOOGLE_MAPS_API_KEY,
      editable: false
    })
  }
};
exports.SEED_DATA = SEED_DATA;
//# sourceMappingURL=MapView.js.map