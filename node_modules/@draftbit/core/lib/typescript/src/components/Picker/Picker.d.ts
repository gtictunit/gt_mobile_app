import * as React from "react";
import { ViewStyle, StyleProp } from "react-native";
import type { Theme } from "../../styles/DefaultTheme";
import type { IconSlot } from "../../interfaces/Icon";
export interface PickerOption {
    value: string;
    label: string;
}
export declare type PickerProps = {
    error?: any;
    placeholder?: string;
    disabled?: boolean;
    style?: StyleProp<ViewStyle> & {
        height?: number;
    };
    value?: string;
    options: PickerOption[] | string[];
    onValueChange: (value: string, index: number) => void;
    defaultValue?: string;
    assistiveText?: string;
    label?: string;
    iconColor?: string;
    iconSize?: number;
    leftIconMode?: "inset" | "outset";
    leftIconName?: string;
    placeholderTextColor?: string;
    rightIconName?: string;
    type?: "solid" | "underline";
    theme: Theme;
    Icon: IconSlot["Icon"];
};
declare const _default: React.ComponentType<import("@draftbit/react-theme-provider").$Without<PickerProps, "theme"> & {
    theme?: import("@draftbit/react-theme-provider").$DeepPartial<any> | undefined;
}> & import("@draftbit/react-theme-provider/typings/hoist-non-react-statics").NonReactStatics<React.ComponentType<PickerProps> & React.FC<PickerProps>, {}>;
export default _default;
