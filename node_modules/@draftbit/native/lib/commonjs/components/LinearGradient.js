"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _expoLinearGradient = require("expo-linear-gradient");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const LinearGradientComponent = _ref => {
  let {
    children,
    color1 = "rgba(90, 69, 255, 1)",
    color2 = "rgba(59, 201, 234, 1)",
    color3 = undefined,
    startX = 0,
    startY = 0,
    endX = 100,
    endY = 100,
    style
  } = _ref;
  const colors = [color1, color2, color3].filter(color => color);
  const start = {
    x: startX / 100,
    y: startY / 100
  };
  const end = {
    x: endX / 100,
    y: endY / 100
  };
  return /*#__PURE__*/React.createElement(_expoLinearGradient.LinearGradient, {
    colors: colors,
    start: start,
    end: end,
    style: style
  }, children);
};

var _default = LinearGradientComponent;
exports.default = _default;
//# sourceMappingURL=LinearGradient.js.map